{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Huy NQ\\\\Desktop\\\\chat-app\\\\src\\\\common\\\\components\\\\GlobalLoadingScreen.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { GlobalLoadingContext } from \"../context/GlobalLoadingContext\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GlobalLoadingScreen() {\n  _s();\n\n  const {\n    isLoading\n  } = useContext(GlobalLoadingContext);\n  if (!isLoading) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  return /*#__PURE__*/_jsxDEV(SLoading, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"spinner\",\n      children: /*#__PURE__*/_jsxDEV(AiOutlineLoading3Quarters, {\n        size: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GlobalLoadingScreen, \"gkdbcd2DUeeydarxc2usMF2V7Cw=\");\n\n_c = GlobalLoadingScreen;\nconst rotate = keyframes`\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst SLoading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.theme.bg.main};\n  .spinner {\n    width: 30px;\n    height: 30px;\n    animation: ${rotate} linear infinite 1s;\n    svg path {\n      fill: ${props => props.theme.theme.logo};\n    }\n  }\n`;\n_c2 = SLoading;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalLoadingScreen\");\n$RefreshReg$(_c2, \"SLoading\");","map":{"version":3,"sources":["C:/Users/Huy NQ/Desktop/chat-app/src/common/components/GlobalLoadingScreen.tsx"],"names":["React","useContext","styled","keyframes","GlobalLoadingContext","AiOutlineLoading3Quarters","GlobalLoadingScreen","isLoading","rotate","SLoading","div","props","theme","bg","main","logo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC;AACA,SAASC,oBAAT,QAAqC,iCAArC;AACA,SAASC,yBAAT,QAA0C,gBAA1C;;;AAEA,eAAe,SAASC,mBAAT,GAA+B;AAAA;;AAC5C,QAAM;AAAEC,IAAAA;AAAF,MAAgBN,UAAU,CAACG,oBAAD,CAAhC;AAEA,MAAI,CAACG,SAAL,EAAgB,oBAAO,qCAAP;AAEhB,sBACE,QAAC,QAAD;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,SAAhB;AAAA,6BACE,QAAC,yBAAD;AAA2B,QAAA,IAAI,EAAE;AAAjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAZuBD,mB;;KAAAA,mB;AAcxB,MAAME,MAAM,GAAGL,SAAU;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;AASA,MAAMM,QAAQ,GAAGP,MAAM,CAACQ,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsBC,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBC,EAAlB,CAAqBC,IAAK;AACzD;AACA;AACA;AACA,iBAAiBN,MAAO;AACxB;AACA,cAAeG,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBG,IAAK;AAChD;AACA;AACA,CAlBA;MAAMN,Q","sourcesContent":["import React, { useContext } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { GlobalLoadingContext } from \"../context/GlobalLoadingContext\";\nimport { AiOutlineLoading3Quarters } from \"react-icons/ai\";\n\nexport default function GlobalLoadingScreen() {\n  const { isLoading } = useContext(GlobalLoadingContext);\n\n  if (!isLoading) return <></>;\n\n  return (\n    <SLoading>\n      <span className=\"spinner\">\n        <AiOutlineLoading3Quarters size={30} />\n      </span>\n    </SLoading>\n  );\n}\n\nconst rotate = keyframes`\n  from {\n    transform: rotate(0);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`\n\nconst SLoading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: ${props => props.theme.theme.bg.main};\n  .spinner {\n    width: 30px;\n    height: 30px;\n    animation: ${rotate} linear infinite 1s;\n    svg path {\n      fill: ${(props) => props.theme.theme.logo};\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}
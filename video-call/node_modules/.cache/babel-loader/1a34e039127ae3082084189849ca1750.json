{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Huy NQ\\\\Desktop\\\\chat-app\\\\src\\\\common\\\\context\\\\CallboxInfoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CallboxInfoContext = /*#__PURE__*/createContext({});\n\nconst CallboxInfoProvider = ({\n  children\n}) => {\n  _s();\n\n  // set id of Callbox\n  const [CallboxInfo, setCallboxInfo] = useState(null); // toggle Callbox info\n\n  const [openCallboxInfo, toggleCallboxInfo] = useState(false); // use args to toggle Callbox info\n\n  const handleToggleCallboxInfo = id => {\n    if (CallboxInfo && id !== CallboxInfo) {\n      setCallboxInfo(id);\n    }\n\n    toggleCallboxInfo(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(CallboxInfoContext.Provider, {\n    value: {\n      CallboxInfo,\n      handleToggleCallboxInfo,\n      openCallboxInfo,\n      toggleCallboxInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CallboxInfoProvider, \"qUlTyzPPK1NyLcThYD4gEVgceuU=\");\n\n_c = CallboxInfoProvider;\nexport default CallboxInfoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CallboxInfoProvider\");","map":{"version":3,"sources":["C:/Users/Huy NQ/Desktop/chat-app/src/common/context/CallboxInfoContext.tsx"],"names":["createContext","useState","CallboxInfoContext","CallboxInfoProvider","children","CallboxInfo","setCallboxInfo","openCallboxInfo","toggleCallboxInfo","handleToggleCallboxInfo","id"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;;AASA,OAAO,MAAMC,kBAAkB,gBAAGF,aAAa,CAC7C,EAD6C,CAAxC;;AAIP,MAAMG,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AAAA;;AACrE;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAgB,IAAhB,CAA9C,CAFqE,CAGrE;;AACA,QAAM,CAACM,eAAD,EAAkBC,iBAAlB,IAAuCP,QAAQ,CAAU,KAAV,CAArD,CAJqE,CAMrE;;AACA,QAAMQ,uBAAuB,GAAIC,EAAD,IAAgB;AAC9C,QAAIL,WAAW,IAAIK,EAAE,KAAKL,WAA1B,EAAuC;AACrCC,MAAAA,cAAc,CAACI,EAAD,CAAd;AACD;;AACDF,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GALD;;AAOA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,WADK;AAELI,MAAAA,uBAFK;AAGLF,MAAAA,eAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGJ;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1BD;;GAAMD,mB;;KAAAA,mB;AA4BN,eAAeA,mBAAf","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\n\ninterface ICallboxInfoContext {\n  CallboxInfo: number | null;\n  toggleCallboxInfo: any;\n  openCallboxInfo: boolean;\n  handleToggleCallboxInfo: any;\n}\n\nexport const CallboxInfoContext = createContext<ICallboxInfoContext>(\n  {} as ICallboxInfoContext\n);\n\nconst CallboxInfoProvider = ({ children }: { children: ReactNode }) => {\n  // set id of Callbox\n  const [CallboxInfo, setCallboxInfo] = useState<number | null>(null);\n  // toggle Callbox info\n  const [openCallboxInfo, toggleCallboxInfo] = useState<boolean>(false);\n\n  // use args to toggle Callbox info\n  const handleToggleCallboxInfo = (id: number) => {\n    if (CallboxInfo && id !== CallboxInfo) {\n      setCallboxInfo(id);\n    }\n    toggleCallboxInfo(true);\n  };\n\n  return (\n    <CallboxInfoContext.Provider\n      value={{\n        CallboxInfo,\n        handleToggleCallboxInfo,\n        openCallboxInfo,\n        toggleCallboxInfo,\n      }}\n    >\n      {children}\n    </CallboxInfoContext.Provider>\n  );\n};\n\nexport default CallboxInfoProvider;\n"]},"metadata":{},"sourceType":"module"}
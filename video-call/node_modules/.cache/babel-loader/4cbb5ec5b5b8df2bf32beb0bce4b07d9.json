{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Huy NQ\\\\Desktop\\\\chat-app\\\\src\\\\common\\\\context\\\\ToggleSidebarContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ToggleSidebarContext = /*#__PURE__*/createContext({});\n\nconst ToggleSidebarProvider = ({\n  children\n}) => {\n  _s();\n\n  const [open, toggleSidebar] = useState(false);\n  const canToggle = useMediaQuery({\n    maxWidth: 991\n  });\n  return /*#__PURE__*/_jsxDEV(ToggleSidebarContext.Provider, {\n    value: {\n      open,\n      toggleSidebar: canToggle ? toggleSidebar : null\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ToggleSidebarProvider, \"eANvXwbHEvN/dFeJoAXxuVmvVs8=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = ToggleSidebarProvider;\nexport default ToggleSidebarProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleSidebarProvider\");","map":{"version":3,"sources":["C:/Users/Huy NQ/Desktop/chat-app/src/common/context/ToggleSidebarContext.tsx"],"names":["createContext","useState","useMediaQuery","ToggleSidebarContext","ToggleSidebarProvider","children","open","toggleSidebar","canToggle","maxWidth"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,aAAT,QAA8B,kBAA9B;;AAOA,OAAO,MAAMC,oBAAoB,gBAAGH,aAAa,CAC/C,EAD+C,CAA1C;;AAIP,MAAMI,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AAAA;;AACvE,QAAM,CAACC,IAAD,EAAOC,aAAP,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMO,SAAS,GAAGN,aAAa,CAAC;AAAEO,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAA/B;AAEA,sBACE,QAAC,oBAAD,CAAsB,QAAtB;AACE,IAAA,KAAK,EAAE;AAAEH,MAAAA,IAAF;AAAQC,MAAAA,aAAa,EAAEC,SAAS,GAAGD,aAAH,GAAmB;AAAnD,KADT;AAAA,cAGGF;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAZD;;GAAMD,qB;UAGcF,a;;;KAHdE,qB;AAcN,eAAeA,qBAAf","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\nimport { useMediaQuery } from \"react-responsive\";\n\ninterface IToggleSidebarContenxt {\n  open: boolean;\n  toggleSidebar: any;\n}\n\nexport const ToggleSidebarContext = createContext<IToggleSidebarContenxt>(\n  {} as IToggleSidebarContenxt\n);\n\nconst ToggleSidebarProvider = ({ children }: { children: ReactNode }) => {\n  const [open, toggleSidebar] = useState(false);\n\n  const canToggle = useMediaQuery({ maxWidth: 991 });\n\n  return (\n    <ToggleSidebarContext.Provider\n      value={{ open, toggleSidebar: canToggle ? toggleSidebar : null }}\n    >\n      {children}\n    </ToggleSidebarContext.Provider>\n  );\n};\n\nexport default ToggleSidebarProvider;\n"]},"metadata":{},"sourceType":"module"}
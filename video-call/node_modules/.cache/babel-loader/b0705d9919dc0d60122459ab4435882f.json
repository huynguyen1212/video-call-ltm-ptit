{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Huy NQ\\\\Desktop\\\\chat-app\\\\src\\\\common\\\\context\\\\ChatboxInfoContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatboxInfoContext = /*#__PURE__*/createContext({});\n\nconst ChatboxInfoProvider = ({\n  children\n}) => {\n  _s();\n\n  // set id of chatbox\n  const [chatboxInfo, setChatboxInfo] = useState(null); // toggle chatbox info\n\n  const [openChatboxInfo, toggleChatboxInfo] = useState(false); // use args to toggle chatbox info\n\n  const handleToggleChatboxInfo = id => {\n    if (chatboxInfo && id !== chatboxInfo) {\n      setChatboxInfo(id);\n    }\n\n    toggleChatboxInfo(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChatboxInfoContext.Provider, {\n    value: {\n      chatboxInfo,\n      handleToggleChatboxInfo,\n      openChatboxInfo,\n      toggleChatboxInfo\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatboxInfoProvider, \"+Z/R5vfeCqAaf4z/iEev++89ocE=\");\n\n_c = ChatboxInfoProvider;\nexport default ChatboxInfoProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatboxInfoProvider\");","map":{"version":3,"sources":["C:/Users/Huy NQ/Desktop/chat-app/src/common/context/ChatboxInfoContext.tsx"],"names":["createContext","useState","ChatboxInfoContext","ChatboxInfoProvider","children","chatboxInfo","setChatboxInfo","openChatboxInfo","toggleChatboxInfo","handleToggleChatboxInfo","id"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;;AASA,OAAO,MAAMC,kBAAkB,gBAAGF,aAAa,CAC7C,EAD6C,CAAxC;;AAIP,MAAMG,mBAAmB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2C;AAAA;;AACrE;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAgB,IAAhB,CAA9C,CAFqE,CAGrE;;AACA,QAAM,CAACM,eAAD,EAAkBC,iBAAlB,IAAuCP,QAAQ,CAAU,KAAV,CAArD,CAJqE,CAMrE;;AACA,QAAMQ,uBAAuB,GAAIC,EAAD,IAAgB;AAC9C,QAAIL,WAAW,IAAIK,EAAE,KAAKL,WAA1B,EAAuC;AACrCC,MAAAA,cAAc,CAACI,EAAD,CAAd;AACD;;AACDF,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACD,GALD;;AAOA,sBACE,QAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAE;AACLH,MAAAA,WADK;AAELI,MAAAA,uBAFK;AAGLF,MAAAA,eAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGJ;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA1BD;;GAAMD,mB;;KAAAA,mB;AA4BN,eAAeA,mBAAf","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\n\ninterface IChatboxInfoContext {\n  chatboxInfo: number | null;\n  toggleChatboxInfo: any;\n  openChatboxInfo: boolean;\n  handleToggleChatboxInfo: any;\n}\n\nexport const ChatboxInfoContext = createContext<IChatboxInfoContext>(\n  {} as IChatboxInfoContext\n);\n\nconst ChatboxInfoProvider = ({ children }: { children: ReactNode }) => {\n  // set id of chatbox\n  const [chatboxInfo, setChatboxInfo] = useState<number | null>(null);\n  // toggle chatbox info\n  const [openChatboxInfo, toggleChatboxInfo] = useState<boolean>(false);\n\n  // use args to toggle chatbox info\n  const handleToggleChatboxInfo = (id: number) => {\n    if (chatboxInfo && id !== chatboxInfo) {\n      setChatboxInfo(id);\n    }\n    toggleChatboxInfo(true);\n  };\n\n  return (\n    <ChatboxInfoContext.Provider\n      value={{\n        chatboxInfo,\n        handleToggleChatboxInfo,\n        openChatboxInfo,\n        toggleChatboxInfo,\n      }}\n    >\n      {children}\n    </ChatboxInfoContext.Provider>\n  );\n};\n\nexport default ChatboxInfoProvider;\n"]},"metadata":{},"sourceType":"module"}
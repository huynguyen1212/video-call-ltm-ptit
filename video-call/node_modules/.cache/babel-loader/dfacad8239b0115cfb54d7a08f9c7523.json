{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Huy NQ\\\\Desktop\\\\chat-app\\\\src\\\\common\\\\context\\\\GlobalLoadingContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalLoadingContext = /*#__PURE__*/createContext({\n  isLoading: false\n});\n\nconst GLProvider = ({\n  children\n}) => {\n  _s();\n\n  const [isLoading, toggleLoading] = useState(false);\n  return /*#__PURE__*/_jsxDEV(GlobalLoadingContext.Provider, {\n    value: {\n      isLoading,\n      toggleLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GLProvider, \"ykbPOUvURf2KuaR0kA3wL44MqDE=\");\n\n_c = GLProvider;\nexport default GLProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GLProvider\");","map":{"version":3,"sources":["C:/Users/Huy NQ/Desktop/chat-app/src/common/context/GlobalLoadingContext.tsx"],"names":["createContext","useState","GlobalLoadingContext","isLoading","GLProvider","children","toggleLoading"],"mappings":";;;AAAA,SAASA,aAAT,EAAmCC,QAAnC,QAAmD,OAAnD;;AAOA,OAAO,MAAMC,oBAAoB,gBAAGF,aAAa,CAAC;AAACG,EAAAA,SAAS,EAAE;AAAZ,CAAD,CAA1C;;AAEP,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAA2C;AAAA;;AAE5D,QAAM,CAACF,SAAD,EAAYG,aAAZ,IAA6BL,QAAQ,CAAC,KAAD,CAA3C;AAEA,sBACE,QAAC,oBAAD,CAAsB,QAAtB;AAA+B,IAAA,KAAK,EAAE;AAACE,MAAAA,SAAD;AAAYG,MAAAA;AAAZ,KAAtC;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CATD;;GAAMD,U;;KAAAA,U;AAWN,eAAeA,UAAf","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\n\ninterface IGlobalLoading {\n  isLoading: boolean;\n  toggleLoading: any;\n}\n\nexport const GlobalLoadingContext = createContext({isLoading: false} as IGlobalLoading);\n\nconst GLProvider = ({children} :  { children: ReactNode }) => {\n\n  const [isLoading, toggleLoading] = useState(false);\n\n  return (\n    <GlobalLoadingContext.Provider value={{isLoading, toggleLoading}}>\n      {children}\n    </GlobalLoadingContext.Provider>\n  )\n}\n\nexport default GLProvider;"]},"metadata":{},"sourceType":"module"}